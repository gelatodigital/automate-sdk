/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { Forwarder, ForwarderInterface } from "../Forwarder";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "execData",
        type: "bytes",
      },
    ],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class Forwarder__factory {
  static readonly abi = _abi;
  static createInterface(): ForwarderInterface {
    return new Interface(_abi) as ForwarderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Forwarder {
    return new Contract(address, _abi, runner) as unknown as Forwarder;
  }
}

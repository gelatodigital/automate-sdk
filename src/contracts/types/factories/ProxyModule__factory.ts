/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ProxyModule, ProxyModuleInterface } from "../ProxyModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IOpsProxyFactory",
        name: "_opsProxyFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "execAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_taskCreator",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onCreateTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "opsProxyFactory",
    outputs: [
      {
        internalType: "contract IOpsProxyFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "taskCreator",
        type: "address",
      },
      {
        internalType: "address",
        name: "execAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "execData",
        type: "bytes",
      },
    ],
    name: "postExecCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_taskCreator",
        type: "address",
      },
    ],
    name: "preCancelTask",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_taskCreator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_execAddress",
        type: "address",
      },
    ],
    name: "preCreateTask",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_taskCreator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_execAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_execData",
        type: "bytes",
      },
    ],
    name: "preExecCall",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "execData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "taskCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LibDataTypes.Module",
        name: "",
        type: "uint8",
      },
    ],
    name: "taskModuleAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "timedTask",
    outputs: [
      {
        internalType: "uint128",
        name: "nextExec",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "interval",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200160b3803806200160b8339818101604052810190620000379190620000f0565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000122565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b6000620000b88262000097565b9050919050565b620000ca81620000ab565b8114620000d657600080fd5b50565b600081519050620000ea81620000bf565b92915050565b60006020828403121562000109576200010862000072565b5b60006200011984828501620000d9565b91505092915050565b60805161148762000184600039600081816102a301528181610347015281816104890152818161052d0152818161067c015281816107200152818161084f01528181610879015281816109ec01528181610a8f0152610b3001526114876000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b2db0b4111610071578063b2db0b41146101b4578063b81cd866146101d0578063ba1d0ff414610201578063c10304f71461021f578063cd3d4fb914610250578063ddca3f4314610280576100b4565b806314ae9926146100b95780632e6e0bd0146100e9578063647846a5146101195780636d2dd29f1461013757806376474e6a14610167578063b0ccbdf014610198575b600080fd5b6100d360048036038101906100ce9190610cf8565b61029e565b6040516100e09190610d47565b60405180910390f35b61010360048036038101906100fe9190610d62565b6103f6565b6040516101109190610d47565b60405180910390f35b610121610429565b60405161012e9190610d47565b60405180910390f35b610151600480360381019061014c9190610d62565b61044f565b60405161015e9190610d47565b60405180910390f35b610181600480360381019061017c9190610d8f565b610482565b60405161018f929190610dcf565b60405180910390f35b6101b260048036038101906101ad9190610e5d565b6107d8565b005b6101ce60048036038101906101c99190610f19565b6107ea565b005b6101ea60048036038101906101e59190610d62565b6107f1565b6040516101f8929190610fcc565b60405180910390f35b61020961084d565b6040516102169190611054565b60405180910390f35b61023960048036038101906102349190610f19565b610871565b604051610247929190611108565b60405180910390f35b61026a6004803603810190610265919061115d565b6109af565b6040516102779190610d47565b60405180910390f35b6102886109e2565b60405161029591906111a3565b60405180910390f35b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329710388846040518263ffffffff1660e01b81526004016102fa9190610d47565b602060405180830381865afa158015610317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033b91906111f6565b905080156103eb5760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bd4972c3856040518263ffffffff1660e01b815260040161039e9190610d47565b602060405180830381865afa1580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df9190611238565b905080925050506103f0565b829150505b92915050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329710388856040518263ffffffff1660e01b81526004016104e09190610d47565b602060405180830381865afa1580156104fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052191906111f6565b905080156106785760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bd4972c3866040518263ffffffff1660e01b81526004016105849190610d47565b602060405180830381865afa1580156105a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c59190611238565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16148061062c57508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16145b61066b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610662906112c2565b60405180910390fd5b80859350935050506107d1565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329710388876040518263ffffffff1660e01b81526004016106d39190610d47565b602060405180830381865afa1580156106f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071491906111f6565b905080156107c85760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bd4972c3886040518263ffffffff1660e01b81526004016107779190610d47565b602060405180830381865afa158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b89190611238565b90508086945094505050506107d1565b85859350935050505b9250929050565b6107e1866109e8565b50505050505050565b5050505050565b60056020528060005260406000206000915090508060000160009054906101000a90046fffffffffffffffffffffffffffffffff16908060000160109054906101000a90046fffffffffffffffffffffffffffffffff16905082565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ded89a7c886040518263ffffffff1660e01b81526004016108d09190610d47565b6040805180830381865afa1580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091091906112e2565b5090508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461095657610951868686610bd2565b61099c565b84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050505b9150809550859250509550959350505050565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329710388836040518263ffffffff1660e01b8152600401610a439190610d47565b602060405180830381865afa158015610a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8491906111f6565b905080610bce5760007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663ded89a7c846040518263ffffffff1660e01b8152600401610ae69190610d47565b6040805180830381865afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2691906112e2565b91505080610bcc577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166374912cd2846040518263ffffffff1660e01b8152600401610b879190610d47565b6020604051808303816000875af1158015610ba6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bca9190611360565b505b505b5050565b60606354132d7860e01b8484846000604051602401610bf49493929190611411565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509392505050565b600080fd5b600080fd5b6000819050919050565b610c7781610c64565b8114610c8257600080fd5b50565b600081359050610c9481610c6e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cc582610c9a565b9050919050565b610cd581610cba565b8114610ce057600080fd5b50565b600081359050610cf281610ccc565b92915050565b60008060408385031215610d0f57610d0e610c5a565b5b6000610d1d85828601610c85565b9250506020610d2e85828601610ce3565b9150509250929050565b610d4181610cba565b82525050565b6000602082019050610d5c6000830184610d38565b92915050565b600060208284031215610d7857610d77610c5a565b5b6000610d8684828501610c85565b91505092915050565b60008060408385031215610da657610da5610c5a565b5b6000610db485828601610ce3565b9250506020610dc585828601610ce3565b9150509250929050565b6000604082019050610de46000830185610d38565b610df16020830184610d38565b9392505050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e1d57610e1c610df8565b5b8235905067ffffffffffffffff811115610e3a57610e39610dfd565b5b602083019150836001820283011115610e5657610e55610e02565b5b9250929050565b600080600080600080600060a0888a031215610e7c57610e7b610c5a565b5b6000610e8a8a828b01610c85565b9750506020610e9b8a828b01610ce3565b9650506040610eac8a828b01610ce3565b955050606088013567ffffffffffffffff811115610ecd57610ecc610c5f565b5b610ed98a828b01610e07565b9450945050608088013567ffffffffffffffff811115610efc57610efb610c5f565b5b610f088a828b01610e07565b925092505092959891949750929550565b600080600080600060808688031215610f3557610f34610c5a565b5b6000610f4388828901610c85565b9550506020610f5488828901610ce3565b9450506040610f6588828901610ce3565b935050606086013567ffffffffffffffff811115610f8657610f85610c5f565b5b610f9288828901610e07565b92509250509295509295909350565b60006fffffffffffffffffffffffffffffffff82169050919050565b610fc681610fa1565b82525050565b6000604082019050610fe16000830185610fbd565b610fee6020830184610fbd565b9392505050565b6000819050919050565b600061101a61101561101084610c9a565b610ff5565b610c9a565b9050919050565b600061102c82610fff565b9050919050565b600061103e82611021565b9050919050565b61104e81611033565b82525050565b60006020820190506110696000830184611045565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110a957808201518184015260208101905061108e565b838111156110b8576000848401525b50505050565b6000601f19601f8301169050919050565b60006110da8261106f565b6110e4818561107a565b93506110f481856020860161108b565b6110fd816110be565b840191505092915050565b600060408201905061111d6000830185610d38565b818103602083015261112f81846110cf565b90509392505050565b6005811061114557600080fd5b50565b60008135905061115781611138565b92915050565b60006020828403121561117357611172610c5a565b5b600061118184828501611148565b91505092915050565b6000819050919050565b61119d8161118a565b82525050565b60006020820190506111b86000830184611194565b92915050565b60008115159050919050565b6111d3816111be565b81146111de57600080fd5b50565b6000815190506111f0816111ca565b92915050565b60006020828403121561120c5761120b610c5a565b5b600061121a848285016111e1565b91505092915050565b60008151905061123281610ccc565b92915050565b60006020828403121561124e5761124d610c5a565b5b600061125c84828501611223565b91505092915050565b600082825260208201905092915050565b7f50726f78794d6f64756c653a204f6e6c79206f776e6572206f662070726f7879600082015250565b60006112ac602083611265565b91506112b782611276565b602082019050919050565b600060208201905081810360008301526112db8161129f565b9050919050565b600080604083850312156112f9576112f8610c5a565b5b600061130785828601611223565b9250506020611318858286016111e1565b9150509250929050565b600061132d82610c9a565b9050919050565b61133d81611322565b811461134857600080fd5b50565b60008151905061135a81611334565b92915050565b60006020828403121561137657611375610c5a565b5b60006113848482850161134b565b91505092915050565b82818337600083830152505050565b60006113a8838561107a565b93506113b583858461138d565b6113be836110be565b840190509392505050565b6000819050919050565b600060ff82169050919050565b60006113fb6113f66113f1846113c9565b610ff5565b6113d3565b9050919050565b61140b816113e0565b82525050565b60006060820190506114266000830187610d38565b818103602083015261143981858761139c565b90506114486040830184611402565b9594505050505056fea2646970667358221220010ef80e6395cd3fc98cba74ccb4f90d08e03a3020a2a69ff3c29b8ce1261d3e64736f6c634300080e0033";

type ProxyModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyModuleConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyModule__factory extends ContractFactory {
  constructor(...args: ProxyModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _opsProxyFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_opsProxyFactory, overrides || {});
  }
  override deploy(
    _opsProxyFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(_opsProxyFactory, overrides || {}) as Promise<
      ProxyModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProxyModule__factory {
    return super.connect(runner) as ProxyModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyModuleInterface {
    return new Interface(_abi) as ProxyModuleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ProxyModule {
    return new Contract(address, _abi, runner) as unknown as ProxyModule;
  }
}
